buildscript {
    repositories {
      maven {
        url "https://plugins.gradle.org/m2/"
      }
      mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.3.0.RELEASE')
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'docker'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'com.healthcheck'


jar {
    baseName = 'healthcheck-application'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") 
    
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
   	runtimeOnly 'com.h2database:h2'

    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
    
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    
    
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.13'
    
    testCompile group: 'junit', name: 'junit'
}

	/*task buildDocker(type: Docker, dependsOn: build) {
	  push = true
	  applicationName = jar.baseName
	  dockerfile = file('docker/Dockerfile')
	  doFirst {
	    copy {
	      from jar
	      into stageDir
	    }
	  }
	}
	*/
